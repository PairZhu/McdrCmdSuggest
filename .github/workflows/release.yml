name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "microsoft"

      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Set build environment variables
        run: echo "BUILD_RELEASE=true" >> $GITHUB_ENV

      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build all versions
        run: ./gradlew buildAndGather

      - name: Get release version
        id: get_version
        run: |
          RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

      - name: Get supported Minecraft versions
        id: mc_versions
        run: |
          # 获取versions目录下的所有子目录，排除mainProject文件
          MC_VERSIONS=$(find versions -maxdepth 1 -mindepth 1 -type d -not -path "*/\.*" | grep -v "mainProject" | sort | sed 's|versions/||' | grep -E '^[0-9]+\.[0-9]+$')

          # 格式化为多行字符串，适用于GitHub Actions
          FORMATTED_MC_VERSIONS=$(echo "$MC_VERSIONS" | sed ':a;N;$!ba;s/\n/\\n/g')

          # 输出到GitHub Actions环境
          echo "mc_versions<<EOF" >> $GITHUB_OUTPUT
          echo "$MC_VERSIONS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          # 打印找到的Minecraft版本，用于调试
          echo "Found Minecraft versions: $MC_VERSIONS"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/libs/*.jar
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Publish to Modrinth
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: ${{ secrets.MODRINTH_PROJECT_ID }}
          modrinth-token: ${{ secrets.MODRINTH_API_TOKEN }}

          files: build/libs/!(*-@(dev|sources|javadoc|all)).jar
          name: ${{ env.VERSION }}
          version: ${{ env.VERSION }}
          version-type: release
          changelog-file: CHANGELOG.md
          game-versions: ${{ steps.mc_versions.outputs.mc_versions }}
          loaders: |
            fabric
          dependencies: |
            fabric-api(required)
